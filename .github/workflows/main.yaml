name: Gestion des pushs
run-name: ${{ github.actor }} is testing out GitHub Actions

permissions: write-all

on:
  push:
    branches: [dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '20'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

  merge-or-create-failure-branch:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Récupération de la date actuelle
        id: get_current_date
        run: |
          echo "CURRENT_DATE=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      - name: Merge or create feature branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ needs.build-and-test.result }}" == "success" ]; then
            echo "Tests passed, merging to master..."
            git fetch origin
            git checkout master
            git pull origin master
            git fetch origin dev:dev  # Récupération explicite de la branche develop
            git merge dev
            git push origin master
          else
            echo "Tests failed, creating failure branch..."
            git fetch origin dev:dev  # Récupération explicite de la branche develop
            git checkout dev
            git checkout -b "failures/${{ env.CURRENT_DATE }}"
            git push origin "failures/${{ env.CURRENT_DATE }}"
            echo "Reverting dev to last successful commit..."
            git reset --hard HEAD~1
            git push --force origin dev
          fi
